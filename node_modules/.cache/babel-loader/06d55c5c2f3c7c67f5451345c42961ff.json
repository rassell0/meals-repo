{"ast":null,"code":"var _jsxFileName = \"/Users/buddhathesagittarius./Desktop/01-starting-project-2/src/store/CartProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useReducer } from 'react';\nimport CartContext from './cartContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const newTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const exsistingItem = state.items[cartItemIndex];\n    let updatedItems;\n\n    if (exsistingItem) {\n      const updatedItem = { ...exsistingItem,\n        amount: exsistingItem.amount + action.item.amount\n      };\n      updatedItems = [...state.items];\n      updatedItems[cartItemIndex] = updatedItem;\n    } else {\n      updatedItems = state.items.concat(action.item);\n    }\n\n    return {\n      items: updatedItems,\n      totalAmount: newTotalAmount\n    };\n  }\n\n  if (action.type === \"REMOVE\") {\n    const cartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n  }\n\n  return defaultCartState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartState] = useReducer(cartReducer, defaultCartState);\n\n  const addItemToCart = item => {\n    dispatchCartState({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartState({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 8\n  }, this);\n};\n\n_s(CartProvider, \"A321fGrGOvATAKC1pl29YNNungo=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","useReducer","CartContext","defaultCartState","items","totalAmount","cartReducer","state","action","type","newTotalAmount","item","price","amount","exsistingItem","cartItemIndex","updatedItems","updatedItem","concat","findIndex","id","CartProvider","props","cartState","dispatchCartState","addItemToCart","removeItemFromCart","cartContext","addItem","removeItem","children"],"sources":["/Users/buddhathesagittarius./Desktop/01-starting-project-2/src/store/CartProvider.jsx"],"sourcesContent":["import React, {useReducer} from 'react';\nimport CartContext from './cartContext';\n\n\n\n\nconst defaultCartState = {\n    items:[],\n    totalAmount:0\n}\n\nconst cartReducer = (state , action) =>{\n\n    if(action.type === \"ADD\"){\n        \n        const newTotalAmount = state.totalAmount + action.item.price * action.item.amount\n\n\n      \n        const exsistingItem = state.items[cartItemIndex]\n      \n        \n        let updatedItems;\n\n        if(exsistingItem){\n           const updatedItem = {\n                ...exsistingItem,\n                amount: exsistingItem.amount + action.item.amount\n            }\n            updatedItems = [...state.items]\n            updatedItems[cartItemIndex] = updatedItem\n        }else{\n            \n            updatedItems = state.items.concat(action.item)\n        }\n\n        \n\n        \n        return {\n            items:updatedItems,\n            totalAmount: newTotalAmount\n        }\n    }\n\nif(action.type === \"REMOVE\"){\n\n   const cartItemIndex = state.items.findIndex(item => item.id === action.item.id)\n}\n\n\n    return defaultCartState\n}\n\n\nconst CartProvider = (props) =>{\n\n   const [cartState, dispatchCartState] =  useReducer(cartReducer, defaultCartState)\n    \n\n    const addItemToCart = (item) =>{\n        dispatchCartState({type:\"ADD\", item:item})\n    }\n    const removeItemFromCart = (id) =>{\n        dispatchCartState({type:\"REMOVE\", id:id})\n    }\n\n    const cartContext ={\n        items: cartState.items,\n        totalAmount: cartState.totalAmount,\n        addItem:addItemToCart,\n        removeItem:removeItemFromCart\n    }\n\n\n\nreturn <CartContext.Provider value={cartContext}>\n\n    {props.children}\n</CartContext.Provider>\n}\n\nexport default CartProvider"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,UAAf,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;;AAKA,MAAMC,gBAAgB,GAAG;EACrBC,KAAK,EAAC,EADe;EAErBC,WAAW,EAAC;AAFS,CAAzB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAASC,MAAT,KAAmB;EAEnC,IAAGA,MAAM,CAACC,IAAP,KAAgB,KAAnB,EAAyB;IAErB,MAAMC,cAAc,GAAGH,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACG,IAAP,CAAYC,KAAZ,GAAoBJ,MAAM,CAACG,IAAP,CAAYE,MAA3E;IAIA,MAAMC,aAAa,GAAGP,KAAK,CAACH,KAAN,CAAYW,aAAZ,CAAtB;IAGA,IAAIC,YAAJ;;IAEA,IAAGF,aAAH,EAAiB;MACd,MAAMG,WAAW,GAAG,EACf,GAAGH,aADY;QAEfD,MAAM,EAAEC,aAAa,CAACD,MAAd,GAAuBL,MAAM,CAACG,IAAP,CAAYE;MAF5B,CAApB;MAICG,YAAY,GAAG,CAAC,GAAGT,KAAK,CAACH,KAAV,CAAf;MACAY,YAAY,CAACD,aAAD,CAAZ,GAA8BE,WAA9B;IACH,CAPD,MAOK;MAEDD,YAAY,GAAGT,KAAK,CAACH,KAAN,CAAYc,MAAZ,CAAmBV,MAAM,CAACG,IAA1B,CAAf;IACH;;IAKD,OAAO;MACHP,KAAK,EAACY,YADH;MAEHX,WAAW,EAAEK;IAFV,CAAP;EAIH;;EAEL,IAAGF,MAAM,CAACC,IAAP,KAAgB,QAAnB,EAA4B;IAEzB,MAAMM,aAAa,GAAGR,KAAK,CAACH,KAAN,CAAYe,SAAZ,CAAsBR,IAAI,IAAIA,IAAI,CAACS,EAAL,KAAYZ,MAAM,CAACG,IAAP,CAAYS,EAAtD,CAAtB;EACF;;EAGG,OAAOjB,gBAAP;AACH,CAzCD;;AA4CA,MAAMkB,YAAY,GAAIC,KAAD,IAAU;EAAA;;EAE5B,MAAM,CAACC,SAAD,EAAYC,iBAAZ,IAAkCvB,UAAU,CAACK,WAAD,EAAcH,gBAAd,CAAlD;;EAGC,MAAMsB,aAAa,GAAId,IAAD,IAAS;IAC3Ba,iBAAiB,CAAC;MAACf,IAAI,EAAC,KAAN;MAAaE,IAAI,EAACA;IAAlB,CAAD,CAAjB;EACH,CAFD;;EAGA,MAAMe,kBAAkB,GAAIN,EAAD,IAAO;IAC9BI,iBAAiB,CAAC;MAACf,IAAI,EAAC,QAAN;MAAgBW,EAAE,EAACA;IAAnB,CAAD,CAAjB;EACH,CAFD;;EAIA,MAAMO,WAAW,GAAE;IACfvB,KAAK,EAAEmB,SAAS,CAACnB,KADF;IAEfC,WAAW,EAAEkB,SAAS,CAAClB,WAFR;IAGfuB,OAAO,EAACH,aAHO;IAIfI,UAAU,EAACH;EAJI,CAAnB;EASJ,oBAAO,QAAC,WAAD,CAAa,QAAb;IAAsB,KAAK,EAAEC,WAA7B;IAAA,UAEFL,KAAK,CAACQ;EAFJ;IAAA;IAAA;IAAA;EAAA,QAAP;AAIC,CAzBD;;GAAMT,Y;;KAAAA,Y;AA2BN,eAAeA,YAAf"},"metadata":{},"sourceType":"module"}